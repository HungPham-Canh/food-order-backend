generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Category {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(255)
  quantity Int    @default(0)
  foods    Food[]
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(255)
  foods Food[] @relation("FoodToTag")
}

model Menu {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(255)
  foods Food[] @relation("FoodToMenu")
}

model Image {
  id      Int    @id @default(autoincrement())
  foodId  Int
  imageId String @db.VarChar(255)
  food    Food   @relation(fields: [foodId], references: [id])
}

model Review {
  id      Int    @id @default(autoincrement())
  foodId  Int
  content String @db.Text
  food    Food   @relation(fields: [foodId], references: [id])
}

model Food {
  id           Int             @id @default(autoincrement())
  categoryId   Int
  name         String          @db.VarChar(255)
  price        Float           @db.SmallMoney
  discount     Float           @db.SmallMoney
  energy       Int
  rating       Float
  quantity     Int             @default(0)
  introduction String
  description  String
  createdDate  DateTime
  category     Category        @relation(fields: [categoryId], references: [id])
  orders       FoodsOnOrders[]
  images       Image[]
  reviews      Review[]
  customers    Customer[]      @relation("CustomerToFood")
  menus        Menu[]          @relation("FoodToMenu")
  tags         Tag[]           @relation("FoodToTag")
}

model Voucher {
  id          Int     @id @default(autoincrement())
  minOrder    Int
  discount    Float   @db.SmallMoney
  description String  @db.VarChar(255)
  code        String  @db.VarChar(255)
  orders      Order[]
}

model Status {
  id     Int     @id @default(autoincrement())
  name   String  @db.VarChar(255)
  orders Order[]
}

model Order {
  id           Int             @id @default(autoincrement())
  voucherId    Int
  statusId     Int
  subTotal     Float           @db.SmallMoney
  deliveryFee  Float           @db.SmallMoney
  tax          Decimal         @db.Decimal(4, 2)
  expectedTime DateTime
  completeTime DateTime
  shipperPhone String          @db.VarChar(255)
  foods        FoodsOnOrders[]
  status       Status          @relation(fields: [statusId], references: [id])
  voucher      Voucher         @relation(fields: [voucherId], references: [id])
}

model FoodsOnOrders {
  id       Int   @id @default(autoincrement())
  foodId   Int
  orderId  Int
  quantity Int   @default(0)
  food     Food  @relation(fields: [foodId], references: [id])
  order    Order @relation(fields: [orderId], references: [id])

  @@unique([foodId, orderId])
}

model Phone {
  id        Int     @id @default(autoincrement())
  addressId Int
  number    String  @db.VarChar(11)
  address   Address @relation(fields: [addressId], references: [id])
}

model Address {
  id         Int      @id @default(autoincrement())
  customerId Int
  street     String   @db.VarChar(255)
  district   String   @db.VarChar(255)
  city       String   @db.VarChar(255)
  email      String   @db.VarChar(255)
  firstName  String   @db.VarChar(255)
  lastName   String   @db.VarChar(255)
  customer   Customer @relation(fields: [customerId], references: [id])
  phone      Phone[]
}

model Customer {
  id            Int       @id @default(autoincrement())
  username      String    @unique @db.VarChar(255)
  hashKey       String    @db.VarChar(255)
  addresses     Address[]
  favoriteFoods Food[]    @relation("CustomerToFood")
}

model Admin {
  id       Int    @id @default(autoincrement())
  username String @unique @db.VarChar(255)
  hashKey  String @db.VarChar(255)
}
